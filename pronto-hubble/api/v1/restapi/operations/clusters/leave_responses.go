// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "pronto-hubble/api/v1/models"
)

// LeaveOKCode is the HTTP code returned for type LeaveOK
const LeaveOKCode int = 200

/*LeaveOK OK

swagger:response leaveOK
*/
type LeaveOK struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewLeaveOK creates LeaveOK with default headers values
func NewLeaveOK() *LeaveOK {

	return &LeaveOK{}
}

// WithPayload adds the payload to the leave o k response
func (o *LeaveOK) WithPayload(payload *models.Cluster) *LeaveOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the leave o k response
func (o *LeaveOK) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LeaveOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*LeaveDefault error

swagger:response leaveDefault
*/
type LeaveDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLeaveDefault creates LeaveDefault with default headers values
func NewLeaveDefault(code int) *LeaveDefault {
	if code <= 0 {
		code = 500
	}

	return &LeaveDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the leave default response
func (o *LeaveDefault) WithStatusCode(code int) *LeaveDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the leave default response
func (o *LeaveDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the leave default response
func (o *LeaveDefault) WithPayload(payload *models.Error) *LeaveDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the leave default response
func (o *LeaveDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LeaveDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

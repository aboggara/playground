// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "pronto-hubble/api/v1/models"
)

// LeaveClusterOKCode is the HTTP code returned for type LeaveClusterOK
const LeaveClusterOKCode int = 200

/*LeaveClusterOK OK

swagger:response leaveClusterOK
*/
type LeaveClusterOK struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewLeaveClusterOK creates LeaveClusterOK with default headers values
func NewLeaveClusterOK() *LeaveClusterOK {

	return &LeaveClusterOK{}
}

// WithPayload adds the payload to the leave cluster o k response
func (o *LeaveClusterOK) WithPayload(payload *models.Cluster) *LeaveClusterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the leave cluster o k response
func (o *LeaveClusterOK) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LeaveClusterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*LeaveClusterDefault error

swagger:response leaveClusterDefault
*/
type LeaveClusterDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLeaveClusterDefault creates LeaveClusterDefault with default headers values
func NewLeaveClusterDefault(code int) *LeaveClusterDefault {
	if code <= 0 {
		code = 500
	}

	return &LeaveClusterDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the leave cluster default response
func (o *LeaveClusterDefault) WithStatusCode(code int) *LeaveClusterDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the leave cluster default response
func (o *LeaveClusterDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the leave cluster default response
func (o *LeaveClusterDefault) WithPayload(payload *models.Error) *LeaveClusterDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the leave cluster default response
func (o *LeaveClusterDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LeaveClusterDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

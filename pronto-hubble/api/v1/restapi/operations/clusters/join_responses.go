// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "pronto-hubble/api/v1/models"
)

// JoinOKCode is the HTTP code returned for type JoinOK
const JoinOKCode int = 200

/*JoinOK OK

swagger:response joinOK
*/
type JoinOK struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewJoinOK creates JoinOK with default headers values
func NewJoinOK() *JoinOK {

	return &JoinOK{}
}

// WithPayload adds the payload to the join o k response
func (o *JoinOK) WithPayload(payload *models.Cluster) *JoinOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the join o k response
func (o *JoinOK) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JoinOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*JoinDefault error

swagger:response joinDefault
*/
type JoinDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewJoinDefault creates JoinDefault with default headers values
func NewJoinDefault(code int) *JoinDefault {
	if code <= 0 {
		code = 500
	}

	return &JoinDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the join default response
func (o *JoinDefault) WithStatusCode(code int) *JoinDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the join default response
func (o *JoinDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the join default response
func (o *JoinDefault) WithPayload(payload *models.Error) *JoinDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the join default response
func (o *JoinDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JoinDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

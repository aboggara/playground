// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateDeviceHandlerFunc turns a function with the right signature into a update device handler
type UpdateDeviceHandlerFunc func(UpdateDeviceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateDeviceHandlerFunc) Handle(params UpdateDeviceParams) middleware.Responder {
	return fn(params)
}

// UpdateDeviceHandler interface for that can handle valid update device params
type UpdateDeviceHandler interface {
	Handle(UpdateDeviceParams) middleware.Responder
}

// NewUpdateDevice creates a new http.Handler for the update device operation
func NewUpdateDevice(ctx *middleware.Context, handler UpdateDeviceHandler) *UpdateDevice {
	return &UpdateDevice{Context: ctx, Handler: handler}
}

/*UpdateDevice swagger:route PUT /devices/{id} devices updateDevice

UpdateDevice update device API

*/
type UpdateDevice struct {
	Context *middleware.Context
	Handler UpdateDeviceHandler
}

func (o *UpdateDevice) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateDeviceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

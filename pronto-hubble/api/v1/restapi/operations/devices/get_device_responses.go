// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "pronto-hubble/api/v1/models"
)

// GetDeviceOKCode is the HTTP code returned for type GetDeviceOK
const GetDeviceOKCode int = 200

/*GetDeviceOK OK

swagger:response getDeviceOK
*/
type GetDeviceOK struct {

	/*
	  In: Body
	*/
	Payload *models.Device `json:"body,omitempty"`
}

// NewGetDeviceOK creates GetDeviceOK with default headers values
func NewGetDeviceOK() *GetDeviceOK {

	return &GetDeviceOK{}
}

// WithPayload adds the payload to the get device o k response
func (o *GetDeviceOK) WithPayload(payload *models.Device) *GetDeviceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device o k response
func (o *GetDeviceOK) SetPayload(payload *models.Device) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetDeviceDefault error

swagger:response getDeviceDefault
*/
type GetDeviceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDeviceDefault creates GetDeviceDefault with default headers values
func NewGetDeviceDefault(code int) *GetDeviceDefault {
	if code <= 0 {
		code = 500
	}

	return &GetDeviceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get device default response
func (o *GetDeviceDefault) WithStatusCode(code int) *GetDeviceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get device default response
func (o *GetDeviceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get device default response
func (o *GetDeviceDefault) WithPayload(payload *models.Error) *GetDeviceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device default response
func (o *GetDeviceDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

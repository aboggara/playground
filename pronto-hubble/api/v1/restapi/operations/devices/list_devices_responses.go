// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "pronto-hubble/api/v1/models"
)

// ListDevicesOKCode is the HTTP code returned for type ListDevicesOK
const ListDevicesOKCode int = 200

/*ListDevicesOK OK

swagger:response listDevicesOK
*/
type ListDevicesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Device `json:"body,omitempty"`
}

// NewListDevicesOK creates ListDevicesOK with default headers values
func NewListDevicesOK() *ListDevicesOK {

	return &ListDevicesOK{}
}

// WithPayload adds the payload to the list devices o k response
func (o *ListDevicesOK) WithPayload(payload []*models.Device) *ListDevicesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list devices o k response
func (o *ListDevicesOK) SetPayload(payload []*models.Device) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListDevicesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Device, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*ListDevicesDefault error

swagger:response listDevicesDefault
*/
type ListDevicesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListDevicesDefault creates ListDevicesDefault with default headers values
func NewListDevicesDefault(code int) *ListDevicesDefault {
	if code <= 0 {
		code = 500
	}

	return &ListDevicesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list devices default response
func (o *ListDevicesDefault) WithStatusCode(code int) *ListDevicesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list devices default response
func (o *ListDevicesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list devices default response
func (o *ListDevicesDefault) WithPayload(payload *models.Error) *ListDevicesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list devices default response
func (o *ListDevicesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListDevicesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

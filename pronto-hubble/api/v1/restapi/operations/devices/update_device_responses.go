// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "pronto-hubble/api/v1/models"
)

// UpdateDeviceOKCode is the HTTP code returned for type UpdateDeviceOK
const UpdateDeviceOKCode int = 200

/*UpdateDeviceOK OK

swagger:response updateDeviceOK
*/
type UpdateDeviceOK struct {

	/*
	  In: Body
	*/
	Payload *models.Device `json:"body,omitempty"`
}

// NewUpdateDeviceOK creates UpdateDeviceOK with default headers values
func NewUpdateDeviceOK() *UpdateDeviceOK {

	return &UpdateDeviceOK{}
}

// WithPayload adds the payload to the update device o k response
func (o *UpdateDeviceOK) WithPayload(payload *models.Device) *UpdateDeviceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update device o k response
func (o *UpdateDeviceOK) SetPayload(payload *models.Device) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDeviceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateDeviceDefault error

swagger:response updateDeviceDefault
*/
type UpdateDeviceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateDeviceDefault creates UpdateDeviceDefault with default headers values
func NewUpdateDeviceDefault(code int) *UpdateDeviceDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateDeviceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update device default response
func (o *UpdateDeviceDefault) WithStatusCode(code int) *UpdateDeviceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update device default response
func (o *UpdateDeviceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update device default response
func (o *UpdateDeviceDefault) WithPayload(payload *models.Error) *UpdateDeviceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update device default response
func (o *UpdateDeviceDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDeviceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
